!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n){document.getElementById("search-bar").addEventListener("keyup",(function(e){if(13===e.keyCode){var n=document.getElementById("search-bar").value;u("https://www.omdbapi.com/?s="+n+"&apikey=94d4e1cf")}}));var t=function(e){var n=document.getElementsByClassName("content")[0];n.innerHTML="",e.forEach((function(e){var t,r,o=document.createElement("li");o.innerHTML='<img src="'+e.Poster+'"></img>'+(t=e.Title,r=e.Year,"<li><p>"+t+"</p> <p>"+r+"</p></li> "),n.append(o)})),o(e)},r=function(e,n){var r=e.filter((function(e){return Number(e.Year)===Number(n)}));t(r)},o=function(e){var n=document.getElementById("myDropdown");n.innerHTML="",function(e){var n=[];return e.forEach((function(e){var t=e.Year;n.push(t)})),n}(e).forEach((function(t){var o=function(e,n){var t=document.createElement("li");return t.innerHTML=n,t.addEventListener("click",(function(t){r(e,n)})),t}(e,t);n.append(o)}))};$("#filterTag").click((function(){$("#myDropdown").toggle()}));var u=function(e){fetch(e).then((function(e){return e.json()})).then((function(e){return t(e.Search)})).catch((function(e){throw new Error(e)}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,